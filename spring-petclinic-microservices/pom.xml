<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.azure.spring</groupId>
    <artifactId>azure-spring-boot-samples</artifactId>
    <version>1.0.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <groupId>org.springframework.samples</groupId>
  <artifactId>spring-petclinic-microservices</artifactId>
  <version>1.0.0</version>

  <name>Spring PetClinic Microservices</name>
  <packaging>pom</packaging>

  <modules>
    <module>spring-petclinic-admin-server</module>
    <module>spring-petclinic-customers-service</module>
    <module>spring-petclinic-vets-service</module>
    <module>spring-petclinic-visits-service</module>
    <module>spring-petclinic-config-server</module>
    <module>spring-petclinic-discovery-server</module>
    <module>spring-petclinic-api-gateway</module>
  </modules>

  <properties>
    <docker.image.prefix>springcommunity</docker.image.prefix>
    <docker.image.exposed.port>9090</docker.image.exposed.port>
    <docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>
    <docker.image.dockerize.version>v0.6.1</docker.image.dockerize.version>
    <docker.plugin.version>1.2.2</docker.plugin.version>
    <spring-boot-admin.version>2.7.10</spring-boot-admin.version>
    <webjars-bootstrap.version>3.3.7-1</webjars-bootstrap.version>
    <webjars-jquery.version>3.1.1-1</webjars-jquery.version>
    <webjars-angular.version>1.6.4</webjars-angular.version>
    <webjars-angular-ui-router.version>1.0.30</webjars-angular-ui-router.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-starter-server</artifactId>
        <version>${spring-boot-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-server-ui</artifactId>
        <version>${spring-boot-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>angularjs</artifactId>
        <version>${webjars-angular.version}</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>jquery</artifactId>
        <version>${webjars-jquery.version}</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>bootstrap</artifactId>
        <version>${webjars-bootstrap.version}</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>angular-ui-router</artifactId>
        <version>${webjars-angular-ui-router.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <repositories>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>springboot</id>
      <activation>
        <file>
          <!-- Just a way to identify a Spring Boot application -->
          <exists>src/main/resources/bootstrap.yml</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <fork>true</fork>
              <layers>
                <enabled>true</enabled>
              </layers>
            </configuration>
            <executions>
              <execution>
                <!-- Spring Boot Actuator displays build-related information if a META-INF/build-info.properties file is present -->
                <goals>
                  <goal>build-info</goal>
                </goals>
                <configuration>
                  <additionalProperties>
                    <encoding.source>${project.build.sourceEncoding}</encoding.source>
                    <encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
                    <java.source>${maven.compiler.source}</java.source>
                    <java.target>${maven.compiler.target}</java.target>
                  </additionalProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

    </profile>

    <profile>
      <id>buildDocker</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.spotify</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>${docker.plugin.version}</version>
              <executions>
                <execution>
                  <phase>install</phase>
                  <goals>
                    <goal>build</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                <dockerDirectory>${docker.image.dockerfile.dir}</dockerDirectory>
                <serverId>docker-hub</serverId>
                <registryUrl>https://index.docker.io/v1/</registryUrl>
                <resources>
                  <resource>
                    <targetPath>/</targetPath>
                    <directory>${project.build.directory}</directory>
                    <include>${project.build.finalName}.jar</include>
                  </resource>
                </resources>
                <buildArgs>
                  <ARTIFACT_NAME>${project.build.finalName}</ARTIFACT_NAME>
                  <EXPOSED_PORT>${docker.image.exposed.port}</EXPOSED_PORT>
                  <DOCKERIZE_VERSION>${docker.image.dockerize.version}</DOCKERIZE_VERSION>
                </buildArgs>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>dev</id>
      <activation>
        <property>
          <name>env</name>
          <value>development</value>
        </property>
      </activation>
    </profile>

    <profile>
      <id>cloud</id>
      <activation>
        <property>
          <name>env</name>
          <value>cloud</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.microsoft.azure</groupId>
          <artifactId>spring-cloud-starter-azure-spring-cloud-client</artifactId>
          <version>2.2.0</version>
        </dependency>
      </dependencies>
    </profile>

  </profiles>

</project>
